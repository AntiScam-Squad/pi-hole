name: Fetch new scam domains
# Controls when the workflow will run
on: push
#on:
  # Triggers the workflow every 6 hours
#  schedule:
#    - cron: "* */8 * * *"


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: requestJSON
      id: requestJSON
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://github.com/polkadot-js/phishing/raw/master/all.json'
        method: 'GET'

      run: |
        echo '${{ steps.requestJSON.outputs.response }}' > all.json

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      #- uses: fjogeleit/http-request-action@v1

    - name: Run Python
      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            #Working code to download latest domains from polkadot.js
            import time
            import requests
            import json
            from datetime import datetime

            # Download all.json data
            # working
            url = requests.get("https://github.com/polkadot-js/phishing/raw/master/all.json")
            text = url.text

            key = json.loads(text)['deny']
            #print(type(key))
            #print(key)


            # open file in write mode
            with open(r'scam.txt', 'w') as fp:
                fp.write("############################################################## \n")  
                fp.write("# AntiScamSquad Block list of crypto scam links \n")
                fp.write("# Last updated: ")
                fp.write(time.strftime("%d-%b-%Y %H:%M:%S %Z"))
                fp.write("\n")
                fp.write("# https://github.com/polkadot-js/phishing/raw/master/all.json \n")        
                fp.write("############################################################## \n")  
                fp.write("\n")
                for l in key:
                    # write each item on a new line
                    fp.write("%s\n" % l)
                print('Done')
